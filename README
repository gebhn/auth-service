Auth Service
________________________________________________________________________________

A service for managing JWTs (JavaScript Web Tokens).

[000] Index
________________________________________________________________________________

* Dependencies ........................................................... [001]
* Building ............................................................... [002]
* Running  ............................................................... [003]
* Testing ................................................................ [004]
* Contributing ........................................................... [005]
* License ................................................................ [006]

[001] Dependencies
________________________________________________________________________________

* Go       [https://go.dev/learn/]
* Make     [https://www.gnu.org/software/make/]
* Protobuf [https://protobuf.dev/installation/]
* Redis    [https://github.com/redis/redis]

Additionally, to run the service(s), your environment must have all mandatory
environment variables present at runtime. See the `example.env` file.

[002] Building
________________________________________________________________________________

Building the service requires you to first generate the types declared in the
protocol definition, but assuming your environment is configured correctly the
build process is very simple:

+------------------------------------------------------------------------------+
|                                                                              |
|   $ git clone git@github.com/gebhn/auth-service.git                          |
|   $ cd auth-service                                                          |
|                                                                              |
|   $ make generate                                                            |
|   $ make build                                                               |
|                                                                              |
|   $ ./bin/auth-service # Runs the service                                    |
|                                                                              |
+------------------------------------------------------------------------------+

[002] Running
________________________________________________________________________________

The service assumes access to a running instance of Redis and Libsql. You may
wish to run these locally via Docker:

+------------------------------------------------------------------------------+
|                                                                              |
|   $ docker run --name auth-redis -d -p 6379:6379 redis:latest                |
|                                                                              |
|   $ docker run --name auth-db -d -p 8080:8080 -ti -e SQLD_NODE=primary \     |
|       ghcr.io/tursodatabase/libsql-server:latest                             |
|                                                                              |
+------------------------------------------------------------------------------+

See the associated documentation for more information regarding Redis and Libsql
respectively.

[003] Testing
________________________________________________________________________________

Testing is similarly simple and also requires a valid .env file:

+------------------------------------------------------------------------------+
|                                                                              |
|   $ make test         # To run unit tests                                    |
|   $ make count=n test # To run unit tests n times                            |
|                                                                              |
+------------------------------------------------------------------------------+

[004] Contributing
________________________________________________________________________________

Pull requests should be opened for review with individual commits and follow the
conventional commits guidelines.

[005] License
________________________________________________________________________________

The project is free and open source, available under the GPL License.
